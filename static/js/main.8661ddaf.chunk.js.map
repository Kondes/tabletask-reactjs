{"version":3,"sources":["svg/arrowTop.js","svg/arrowDown.js","search/searchElement.js","table/table.js","loader/loader.js","detailItem/detailItem.js","App.js","index.js"],"names":["ArrowTop","xmlns","width","height","fill","className","viewBox","fillRule","d","ArrowDown","SearchElement","onSearchSend","useState","searchValue","setSearchValue","type","placeholder","value","onChange","event","target","onClick","Table","sortData","contactData","directionSort","detailRow","fieldData","setFieldData","Arrow","fieldSortData","field","map","item","id","firstName","lastName","email","phone","adress","state","Loader","DetailedItem","detailItemData","AdressCity","city","AdressStr","streetAddress","AdressState","AdressZip","zip","description","App","setContactlData","isLoading","setIsLoading","setDirectionSort","rowItem","setRowItem","searchText","setSearchText","filteredData","filter","el","toLowerCase","includes","console","log","useEffect","axios","then","res","data","copyData","concat","sort","a","b","reverse","row","text","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8661ddaf.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst ArrowTop = () => {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-arrow-up-short\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z\"\n        />\n      </svg>\n    );\n}\n\nexport default ArrowTop","import React from 'react'\n\n\nconst ArrowDown= () => {\n    return (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-arrow-down-short\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z\"\n        />\n      </svg>\n    );\n}\n\nexport default ArrowDown","import React, { useState } from \"react\";\n\nconst SearchElement = ({ onSearchSend }) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search by name:\"\n        value={searchValue}\n        onChange={(event) => {\n          setSearchValue(event.target.value);\n        }}\n      />\n      <button type=\"button\" onClick={() => onSearchSend(searchValue)}>\n        find\n      </button>\n    </div>\n  );\n};\n\nexport default SearchElement;\n","import React,{useState} from \"react\";\nimport ArrowTop from \"../svg/arrowTop\";\nimport ArrowDown from \"../svg/arrowDown\";\nimport SearchElement from \"../search/searchElement\";\n\nconst Table = ({ sortData, contactData, directionSort,detailRow,onSearchSend }) => {\n    const [fieldData, setFieldData]=useState('')\n  const Arrow = () => {\n    return directionSort ? <ArrowDown /> : <ArrowTop />;\n  };\n    \n    const fieldSortData = (field) => {\n        sortData(field)\n        setFieldData(field)\n    }\n\n    return (\n      <div>\n            <SearchElement onSearchSend={onSearchSend}/>\n        <table>\n          <thead>\n            <tr>\n              <th\n                onClick={() => {\n                  fieldSortData(\"id\");\n                }}\n              >\n                id {fieldData === \"id\" ? <Arrow /> : null}\n              </th>\n              <th\n                onClick={() => {\n                  fieldSortData(\"firstName\");\n                }}\n              >\n                First name {fieldData === \"firstName\" ? <Arrow /> : null}\n              </th>\n              <th\n                onClick={() => {\n                  fieldSortData(\"lastName\");\n                }}\n              >\n                Last name {fieldData === \"lastName\" ? <Arrow /> : null}\n              </th>\n              <th\n                onClick={() => {\n                  fieldSortData(\"email\");\n                }}\n              >\n                Email {fieldData === \"email\" ? <Arrow /> : null}\n              </th>\n              <th\n                onClick={() => {\n                  fieldSortData(\"phone\");\n                }}\n              >\n                Phone {fieldData === \"phone\" ? <Arrow /> : null}\n              </th>\n              <th\n                onClick={() => {\n                  fieldSortData(\"adress.state\");\n                }}\n              >\n                State {fieldData === \"adress.state\" ? <Arrow /> : null}\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {contactData.map((item) => (\n              <tr\n                key={item.id + item.firstName}\n                onClick={() => detailRow(item)}\n              >\n                <td>{item.id}</td>\n                <td>{item.firstName}</td>\n                <td>{item.lastName}</td>\n                <td>{item.email}</td>\n                <td>{item.phone}</td>\n                <td>{item.adress.state}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n};\n\nexport default Table;\n","import React from 'react'\n\n\nconst Loader = () => {\n    return (\n        <div>Loading...</div>\n    )\n}\n\n\nexport default Loader","import React from \"react\";\n\nconst DetailedItem = ({ detailItemData }) => {\n  const AdressCity =\n    detailItemData && detailItemData.adress ? detailItemData.adress.city : null;\n\n  const AdressStr =\n    detailItemData && detailItemData.adress\n      ? detailItemData.adress.streetAddress\n      : null;\n\n  const AdressState =\n    detailItemData && detailItemData.adress\n      ? detailItemData.adress.state\n      : null;\n\n  const AdressZip =\n    detailItemData && detailItemData.adress ? detailItemData.adress.zip : null;\n\n  return (\n    <div>\n      <h2>Profile info:</h2>\n      <div>\n        Selected profile:{\" \"}\n        <b>\n          {detailItemData.firstName} {detailItemData.lastName}{\" \"}\n        </b>\n      </div>\n      <div>\n        Description: <b>{detailItemData.description} </b>\n      </div>\n      <div>\n        Address: <b>{AdressStr} </b>\n      </div>\n      <div>\n        City: <b>{AdressCity} </b>\n      </div>\n      <div>\n        State: <b>{AdressState} </b>\n      </div>\n      <div>\n        Index: <b>{AdressZip} </b>\n      </div>\n    </div>\n  );\n};\n\nexport default DetailedItem;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Table from \"./table/table\";\nimport Loader from \"./loader/loader\";\nimport DetailedItem from \"./detailItem/detailItem\";\n\nfunction App() {\n  const baseUrl =\n    \"https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json\";\n\n  const [contactData, setContactlData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [directionSort, setDirectionSort] = useState(true);\n  const [rowItem, setRowItem] = useState(\"\");\n  const [searchText, setSearchText] = useState(\"\");\n\n  const getfilteredData = () => {\n    if (!searchText) {\n      return contactData;\n    }\n    return contactData.filter(\n      (el) => {\n      return el[\"firstName\"].toLowerCase().includes(searchText.toLowerCase());\n    });\n  };\n\n  const filteredData = getfilteredData();\n  // console.log(contactData);\n  console.log(filteredData);\n\n  const onSearchSend = (text) => {\n    setSearchText(text)\n    // console.log(setSearchText);\n  };\n  // console.log(searchText);\n\n  const sortData = (field) => {\n    const copyData = contactData.concat();\n    let sortData;\n\n    if (directionSort) {\n      sortData = copyData.sort((a, b) => {\n        return a[field] > b[field] ? 1 : -1;\n      });\n    }\n    sortData = copyData.reverse((a, b) => {\n      return a[field] > b[field] ? 1 : -1;\n    });\n\n    setContactlData(sortData);\n    setDirectionSort(!directionSort);\n  };\n\n  useEffect(() => {\n    axios(baseUrl).then((res) => {\n      // console.log(res);\n      setContactlData(res.data);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const detailRow = (row) => {\n    setRowItem(row);\n  };\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Table\n          contactData={contactData}\n          sortData={sortData}\n          directionSort={directionSort}\n          detailRow={detailRow}\n          onSearchSend={onSearchSend}\n        />\n      )}\n      <DetailedItem detailItemData={rowItem} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}